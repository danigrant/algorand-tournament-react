{"ast":null,"code":"var _jsxFileName = \"/Users/danigrant/Projects/algorand-react/pages/learn/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport AppContainer from '../../components/AppContainer';\nimport Header from '../../components/Header';\nimport YouTube from 'react-youtube';\nimport { withRouter } from 'next/router';\n\nconst Learn = props => {\n  const {\n    router\n  } = props;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), __jsx(AppContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: \"margin-top-lrg font-color-yellow font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Diophantine Equations\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Numberphile really explains this best. Watch these three videos, get obsessed. Compete. Repeat.\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"First, watch this one where they explain the puzzle and the outsanding mysteries.\"), __jsx(YouTube, {\n    videoId: \"wymmCdLdPvM\",\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Then, watch this one where they crack one of the unsolved mysteries mentioned in the video before.\"), __jsx(YouTube, {\n    videoId: \"_-M_3oV75Lw\",\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Then, watch this one where they crack one of the other unsolved mysteries mentioned in the video before.\"), __jsx(YouTube, {\n    videoId: \"ASoz_NuIvP0\",\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Then, watch this one where they crack the last unsolved number less than 100.\"), __jsx(YouTube, {\n    videoId: \"zyG8Vlw5aAw\",\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"This tournament is about getting people cracking the 10 remaining unsolved numbers below 1,000.\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Happy solving!\")));\n};\n\nexport default withRouter(Learn);","map":{"version":3,"sources":["/Users/danigrant/Projects/algorand-react/pages/learn/[id].js"],"names":["AppContainer","Header","YouTube","withRouter","Learn","props","router"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,+BAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,mDAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uGAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFAHF,EAIE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,aAAjB;AAA+B,IAAA,KAAK,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0GALF,EAME,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,aAAjB;AAA+B,IAAA,KAAK,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gHAPF,EAQE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,aAAjB;AAA+B,IAAA,KAAK,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFATF,EAUE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,aAAjB;AAA+B,IAAA,KAAK,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uGAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF,CAFF,CADF;AAmBD,CArBD;;AAuBA,eAAeF,UAAU,CAACC,KAAD,CAAzB","sourcesContent":["import AppContainer from '../../components/AppContainer'\nimport Header from '../../components/Header'\nimport YouTube from 'react-youtube';\nimport { withRouter } from 'next/router'\n\nconst Learn = props => {\n  const { router } = props\n  return (\n    <div>\n      <Header />\n      <AppContainer>\n        <p className=\"margin-top-lrg font-color-yellow font-weight-bold\">Diophantine Equations</p>\n        <p>Numberphile really explains this best. Watch these three videos, get obsessed. Compete. Repeat.</p>\n        <p>First, watch this one where they explain the puzzle and the outsanding mysteries.</p>\n        <YouTube videoId=\"wymmCdLdPvM\" width=\"100%\" />\n        <p>Then, watch this one where they crack one of the unsolved mysteries mentioned in the video before.</p>\n        <YouTube videoId=\"_-M_3oV75Lw\" width=\"100%\" />\n        <p>Then, watch this one where they crack one of the other unsolved mysteries mentioned in the video before.</p>\n        <YouTube videoId=\"ASoz_NuIvP0\" width=\"100%\" />\n        <p>Then, watch this one where they crack the last unsolved number less than 100.</p>\n        <YouTube videoId=\"zyG8Vlw5aAw\" width=\"100%\" />\n        <p>This tournament is about getting people cracking the 10 remaining unsolved numbers below 1,000.</p>\n        <p>Happy solving!</p>\n      </AppContainer>\n    </div>\n  )\n}\n\nexport default withRouter(Learn)\n"]},"metadata":{},"sourceType":"module"}