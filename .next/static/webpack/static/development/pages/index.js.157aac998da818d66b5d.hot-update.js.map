{"version":3,"file":"static/webpack/static/development/pages/index.js.157aac998da818d66b5d.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react'\nimport AppContainer from '../components/AppContainer'\nimport Header from '../components/Header'\nimport CompetitionsGrid from '../components/CompetitionsGrid'\nimport Loading from '../components/Loading'\nimport { getCompetitions } from '../utils/firebase'\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      competitions: []\n    }\n  }\n  async componentDidMount() {\n    this.setState({\n      competitions: await getCompetitions()\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Header />\n        <AppContainer>\n          <div className=\"constrained-width-sml center-on-desktop-not-mobile\">\n            <p className=\"margin-top-lrg font-weight-bold font-color-green\">A Number Theory Tournament Built On Algorand</p>\n            <p>Almost every number can be expressed as the sum of three cubes. For instance, 6 is 2³ + (-1)³ + (-1)³.</p>\n            <p>Some solutions are really small. 29 is 3³ + 1³ + 1³. And some solutions are ginormously big. 33 is 2220422932³ + (-2218888517)³ + (-283059965)³. Because of how big some of the numbers in these solutions are, we are only discovering the sum of three cubes for various integers now, though humans have been searching for them for 70 years.</p>\n            <p>There are only ten integers below 1,000 that we are still missing answers to. This tournament is about finding the answers to those last 10, and rewarding those who do.</p>\n            <p>In this tournament, there are 10 escrow Algorand contracts, one for each unsolved number. The first person to submit a correct diophantine equation to each address gets all of the algos in the contract.</p>\n            <p>To encourage mathematical research and raise the stakes, send some algos to the addresses of the escrow contracts and they will be paid out to anyone who solves one of the last numbers.</p>\n          </div>\n          {\n            this.state.competitions.length > 0 &&\n            <CompetitionsGrid competitions={this.state.competitions}/>\n          }\n        </AppContainer>\n      </div>\n    )\n  }\n}\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;;;;;;;;;AACA;;AACA;AACA;;;;AADA;;;AADA;AACA;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAhCA;AACA;AAkCA;;;;A","sourceRoot":""}