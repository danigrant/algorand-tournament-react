{"version":3,"file":"static/webpack/static/development/pages/index.js.fe4b84658a5090e2443c.hot-update.js","sources":["webpack:///./utils/firebase.js"],"sourcesContent":["const firebase = require('firebase')\nimport { getAlgorandAddressBalance } from './algorand'\n\nconst firebaseConfig = {\n  apiKey: process.env.FIREBASE_API_KEY,\n  authDomain: \"algorand-tournament.firebaseapp.com\",\n  databaseURL: \"https://algorand-tournament.firebaseio.com\",\n  projectId: \"algorand-tournament\",\n  storageBucket: \"algorand-tournament.appspot.com\",\n  messagingSenderId: \"283477236370\",\n  appId: \"1:283477236370:web:c7558718f40fabd7cf244b\"\n}\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nconst db = firebase.firestore();\nconst competitionsRef = db.collection('competitions');\n\nasync function getCompetitions() {\n  let snapshot = await competitionsRef.orderBy('number').get()\n  let data = []\n  await snapshot.forEach(async (doc) => {\n    let docData = doc.data()\n\n    await data.push({\n      \"number\": docData.number,\n  \t\t\"algorandEscrowAddress\": docData.algorandEscrowAddress,\n  \t\t\"isSolved\": docData.isSolved,\n      \"solverName\": docData.solverName ? docData.solverName : undefined,\n      \"solution\": docData.solution ? docData.solution : {},\n      \"solveDate\": docData.solveDate ? docData.solveDate : undefined\n    })\n  })\n\n  // now get balances\n  await data.forEach(async (escrowAccount, index) => {\n    let algoBalance = await getAlgorandAddressBalance(escrowAccount.algorandEscrowAddress)\n    Object.assign(data[index], { balance: algoBalance })\n  })\n\n  if (!data[0].balance) {\n    await new Promise(cb => setTimeout(cb, 400))\n  }\n\n  console.log('in getCompetitions: ', data[3]); // this prints the balance correctly\n  console.log('in getCompetitions: ', data[3].balance); // this prints undefined (unless i wait a whole second)\n  return data\n}\n\nmodule.exports = { getCompetitions }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAFA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAuBA;AAAA;AACA;AAxBA;AA0BA;AACA;AAAA;AACA;AA5BA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AA+BA;AAAA;AAAA;;;;A","sourceRoot":""}